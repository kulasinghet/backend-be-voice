// <auto-generated />
using System;
using Be_My_Voice_Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Be_My_Voice_Backend.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230809181628_addStatusToTheSessionTable")]
    partial class addStatusToTheSessionTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Be_My_Voice_Backend.Models.ChatModel", b =>
                {
                    b.Property<Guid>("chatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("receivedUserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("sentUserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("videoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("chatID");

                    b.ToTable("chats");
                });

            modelBuilder.Entity("Be_My_Voice_Backend.Models.SessionModel", b =>
                {
                    b.Property<Guid>("sessionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("userID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("sessionID");

                    b.HasIndex("userID");

                    b.ToTable("sessions");
                });

            modelBuilder.Entity("Be_My_Voice_Backend.Models.TranslationModel", b =>
                {
                    b.Property<Guid>("translationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createdTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("sessionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("translatedText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("videoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("translationID");

                    b.HasIndex("sessionID");

                    b.ToTable("translations");
                });

            modelBuilder.Entity("Be_My_Voice_Backend.Models.UserModel", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Be_My_Voice_Backend.Models.SessionModel", b =>
                {
                    b.HasOne("Be_My_Voice_Backend.Models.UserModel", "user")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Be_My_Voice_Backend.Models.TranslationModel", b =>
                {
                    b.HasOne("Be_My_Voice_Backend.Models.SessionModel", "session")
                        .WithMany()
                        .HasForeignKey("sessionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("session");
                });
#pragma warning restore 612, 618
        }
    }
}
